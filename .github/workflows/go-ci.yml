name: Go CI Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Tests Dynamically
        run: |
          # 1. Encontrar todos los directorios con archivos .go
          #    Excluimos la carpeta 'vendor' y otras que no son de código
          #    El comando "grep" y "sed" aseguran que solo obtengamos las rutas limpias
          #    "xargs go test" ejecuta 'go test' para cada directorio encontrado
          find . -type d -not -path "./.git/*" -not -path "./vendor/*" | while read dir; do
            if ls "$dir"/*.go &> /dev/null; then
              echo "Executing tests in: $dir"
              go test -v -race -coverprofile=coverage.out "$dir"
            fi
          done

      - name: Check Code Coverage
        run: |
          go tool cover -func=coverage.out
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/\%//')
          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "La cobertura de pruebas es muy baja ($coverage%). Se requiere 80% o más."
            exit 1
          fi

      - name: Check Cyclomatic Complexity
        run: |
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          gocyclo -over 15 .